# This is a build file for huggle (used with cmake)
# you will need to update it by hand
cmake_minimum_required (VERSION 2.8.9)
PROJECT(huggle)
execute_process(COMMAND "${CMAKE_SOURCE_DIR}/prepare_cmake.sh" WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
execute_process(COMMAND "${CMAKE_SOURCE_DIR}/update.sh" WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
#  cmake <folder> -DQT5_BUILD=true
option(LIBCORE "Build core library" FALSE)
option(PYTHON_BUILD "Build huggle with python" FALSE)
option(QT5_BUILD "Build huggle using the Qt5 framework" FALSE)
option(HUGGLE_EXT "Build huggle extensions" FALSE)
if (HUGGLE_EXT)
    add_subdirectory(extension_list/enwiki/)
    add_subdirectory(extension_list/mass-delivery/)
endif()
SET(QT_USE_QTNETWORK TRUE)
SET(QT_USE_QTXML TRUE)
SET(QT_USE_QTWEBKIT TRUE)
SET(CMAKE_BUILD_TYPE Release)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)
if(WIN32)
    if(MINGW)
	SET(CMAKE_CXX_FLAGS "-mwindows -std=c++11")
    endif()
else()
	SET(CMAKE_CXX_FLAGS "-std=c++11")
endif()
#### Qt 4 and 5 ####
if(QT5_BUILD)
    find_package(Qt5Core REQUIRED)
    find_package(Qt5Gui REQUIRED)
    find_package(Qt5WebKit REQUIRED)
    find_package(Qt5Xml REQUIRED)
    find_package(Qt5Widgets REQUIRED)
    find_package(Qt5Network REQUIRED)
    set(QT_INCLUDES
        ${Qt5Gui_INCLUDE_DIRS}
        ${Qt5Widgets_INCLUDE_DIRS}
        ${Qt5Network_INCLUDE_DIRS}
        ${Qt5WebKit_INCLUDE_DIRS}
        ${Qt5Xml_INCLUDE_DIRS}
        ${Qt5Svg_INCLUDE_DIRS}
    )
    include_directories(${QT_INCLUDES})
else()
    find_package(Qt4 REQUIRED)
endif()
if (PYTHON_BUILD)
    find_package(PythonLibs REQUIRED)
    include_directories(${PYTHON_INCLUDE_DIRS})
endif()

file(GLOB srcx
    "*.cpp"
)
file (GLOB resx
    "*.qrc"
)
file (GLOB uixx
    "*.ui"
)

SET(huggle_SOURCES ${srcx})
SET(huggle_FORMS ${uixx})
SET(huggle_RESOURCES ${resx})
if(QT5_BUILD)
    QT5_WRAP_CPP(huggle_HEADERS_MOC ${huggle_HEADERS})
    QT5_WRAP_UI(huggle_FORMS_HEADERS ${huggle_FORMS})
    QT5_ADD_RESOURCES(huggle_RESOURCES_RCC ${huggle_RESOURCES})
else()
    QT4_WRAP_CPP(huggle_HEADERS_MOC ${huggle_HEADERS})
    QT4_WRAP_UI(huggle_FORMS_HEADERS ${huggle_FORMS})
    QT4_ADD_RESOURCES(huggle_RESOURCES_RCC ${huggle_RESOURCES})
endif()
if (NOT QT5_BUILD)
  INCLUDE(${QT_USE_FILE})
endif()
ADD_DEFINITIONS(${QT_DEFINITIONS})
ADD_DEFINITIONS( -DQT_USE_QSTRINGBUILDER )
if (HUGGLE_EXT OR LIBCORE)
	ADD_LIBRARY(core SHARED ${huggle_SOURCES} ${huggle_HEADERS_MOC} ${huggle_FORMS_HEADERS} ${huggle_RESOURCES_RCC})
	TARGET_LINK_LIBRARIES(core ${QT_LIBRARIES})
	SET_TARGET_PROPERTIES(core PROPERTIES COMPILE_FLAGS -DHUGGLE_LIBRARY)
endif()
ADD_EXECUTABLE(huggle ${huggle_SOURCES} ${huggle_HEADERS_MOC} ${huggle_FORMS_HEADERS} ${huggle_RESOURCES_RCC})
if (NOT PYTHON_BUILD)
    TARGET_LINK_LIBRARIES(huggle ${QT_LIBRARIES})
else()
    if (WIN32)
	ADD_EXECUTABLE(py_hug ${huggle_SOURCES} ${huggle_HEADERS_MOC} ${huggle_FORMS_HEADERS} ${huggle_RESOURCES_RCC})
        TARGET_LINK_LIBRARIES(huggle ${QT_LIBRARIES})
        TARGET_LINK_LIBRARIES(py_hug ${PYTHON_LIBRARIES} ${QT_LIBRARIES})
	SET_TARGET_PROPERTIES(py_hug PROPERTIES COMPILE_FLAGS -DHUGGLE_PYTHON)
    else()
        ADD_DEFINITIONS(-DHUGGLE_PYTHON )
        TARGET_LINK_LIBRARIES(huggle ${PYTHON_LIBRARIES} ${QT_LIBRARIES})
    endif()
endif()
if (WIN32)
    TARGET_LINK_LIBRARIES(huggle dbghelp)
    if (LIBCORE OR HUGGLE_EXT)
        TARGET_LINK_LIBRARIES(core dbghelp)
    endif()
    if (PYTHON_BUILD)
	    TARGET_LINK_LIBRARIES(py_hug dbghelp)
    endif()
endif()
if (QT5_BUILD)
    qt5_use_modules(huggle Core Gui Widgets WebKitWidgets WebKit Network Xml)
	if (HUGGLE_EXT OR LIBCORE)
		qt5_use_modules(core Core Gui Widgets WebKitWidgets WebKit Network Xml)
	endif()
	if (PYTHON_BUILD)
		qt5_use_modules(py_hug Core Gui Widgets WebKitWidgets WebKit Network Xml)
	endif()
endif()
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})
INSTALL(FILES ${CMAKE_SOURCE_DIR}/man/huggle.1 DESTINATION share/man/man1)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/build/huggle.desktop DESTINATION share/applications)
if (HUGGLE_EXT OR LIBCORE)
    INSTALL(TARGETS core DESTINATION lib)
endif ()
INCLUDE(${CMAKE_SOURCE_DIR}/CPackInfo)
INSTALL(FILES ${CMAKE_SOURCE_DIR}/Resources/huggle3_newlogo.png DESTINATION share/huggle)
INSTALL(TARGETS huggle DESTINATION bin)
INCLUDE(CPack)
